name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install --legacy-peer-deps --force

    - name: Create ZIP file
      run: |
        zip -r function.zip . -x "*.git*" -x "*.log" -x ".lambdaignore" -x "node_modules/.bin/*"

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Upload to S3
      run: |
        aws s3 cp function.zip s3://pdf-code-db/function.zip --region ap-south-1

    - name: Deploy Lambda Function Code
      run: |
        aws lambda update-function-code \
          --function-name pdf-generator \
          --s3-bucket pdf-code-db \
          --s3-key function.zip \
          --region ap-south-1

    - name: Get Latest Layer Version ARN
      id: get-layer-arn
      run: |
        layer_arn=$(aws lambda list-layer-versions --layer-name chromium --region ap-south-1 --query 'LayerVersions[0].LayerVersionArn' --output text)
        echo "::set-output name=layer_arn::$layer_arn"

    - name: Update Lambda Function Configuration
      run: |
        aws lambda update-function-configuration \
          --function-name pdf-generator \
          --layers ${{ steps.get-layer-arn.outputs.layer_arn }} \
          --region ap-south-1
